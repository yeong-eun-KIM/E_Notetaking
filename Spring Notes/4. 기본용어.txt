1. 웹 서버 (Web Server)
    1) 사용자로부터 HTTP 요청을 받거나
    2) 웹 컨테이너가 전달해준 결과물을 정적인 페이지로 생성하여
    3) 사용자에게 응답해주는 소프트웨어
    4) 웹 페이지는 주로 HTML, CSS, JS 등으로 구성됨

2. 웹 컨테이너 (Web Container)
    1) 웹 서버가 전송해준 요청을 기초로 동적인 페이지를 생성하여 웹 서버로 돌려줌
    2) 동적 페이지라는 것은 사용자마다 다른 결과로 응답할 수 있기 때문임
    3) 예 : 로그인
        - 로그인한 아이디를 보고 각자에 맞는 페이지를 구성해 보내주는 것임

3. WAS (Web Application Server)
    1) 웹 애플리케이션이 실행 될 수 있는 환경을 제공하는 소프트웨어
    2) 웹 서버와 웹 컨테이너를 포함한 개념
    3) 예 : 톰캣(Tomcat), 웹로직(WebLogic), 웹스피어(WebSphere) 등

4. HTTP (Hyper Text Transfer Protocol) / HTTPs (HTTP Sercure)
    1) WWW에서 웹 서버와 사용자 사이의 통신을 위해 사용하는 통신 프로토콜
    2) 사용자가 요청하면 웹 서버가 응답하는 단순한 구조의 프로토콜

5. 포트 (Port)
    1) 컴퓨터 사이에서 데이터를 주고받을 수 있는 통로
    2) 인터넷에서는 IP 주소를 통해 서버 컴퓨터의 위치를 파악함
    3) 그 컴퓨터가 제공하는 특정 서비스는 포트 번호를 통해 알 수 있음
    4) 예 : HTTP는 80번 포트, HTTPs는 443번 포트 사용

6. URL (Uniform Resource Locators)
    1) 인터넷 상에서 자원이 어디 있는지를 알려주기 위한 주소 규약임
    2) 웹 페이지 뿐만 아니라 네트워크의 모든 자원에 대한 주소를 표현 할 수 있음
    3) 대부분의 URL은 아래 형식으로 표시됨 ([] 부분은 생략가능)

        protocol://domain[:Port][/context][/resource]
        -------    -----
        - doamin : 서버주소 - 도메인이나 IP주소
        - context : 접근할 웹 애플리케이션의 이름
                    웹 애플리케이션 서버는 여러 개의 컨텍스트(애플리케이션)을 가질 수 있음
                    생략하면 기본 컨텍스트(ROOT, /)가 동작함
        - resource : 요청 할 자원 이름