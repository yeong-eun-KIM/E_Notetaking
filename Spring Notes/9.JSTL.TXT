1. JSP Standard Tag Library (JSTL)
    1) 스크립틀릿(<% %>)을 사용하지 않고도 제어문, 반복문 등을 사용할 수 있음
        - 처리를 해주는 태그를 모아 표준으로 만들어 놓은 라이브러리
    2) EL과 함께 주로 사용함

2. JSTL에서 제공하는 태그 종류
    1) Core 태그
        - 변수 선언, 조건문/반복문, URL 처리
        - 접두어 : c
        - URI : http://java.sun.com/jstl/core
    2) Formatting 태그
        - 숫자, 날짜, 시간 포맷 지정
        - 접두어 : fmt
        - URI : http://java.sun.com/jstl/fmt
    3) XML 태그
        - XML 파싱
        - 접두어 : x
        - URI : http://java.sun.com/jstl/xml
    4) function 태그
        - 컬렉션, 문자열 처리
        - 접두어 : fn
        - URI : http://java.sun.com/jstl/functions
    5) SQL 태그
        - 데이터베이스 연결 및 쿼리 실행
        - 접두어 : sql
        - URL : http://java.sun.com/jstl/sql

3. 코어(Core) 태그
    1) set
        - 사용할 변수나 자바빈즈를 생성할 때 사용함
        - setAttribute() 메서드와 같은 역할
        - <c:set var="변수명" value="값" scope="영역" />
            - scope 기본값 : page
        - target 속성 : 자바빈즈를 설정함
        - property 속성 : 자바빈즈의 속성, 즉 멤버 변수의 값을 지정함
    2) remove
    3) if
        - 자바의 if와 동일
        - else가 별도로 없음
        - <c:if test test="조건" var="변수명" scope="영역">
            조건이 true일 때 출력할 문장
          </c:if>
            - var : 조건 결과를 저장할 변수명 저장
        - 주의사항
            - test 속성 값으로 EL이 아닌 일반 값이 오면 무조건 false를 반환함
                - 단, 일반 값으로 true가 사용되는 것은 예외임
            - 문자열 'tRuE'는 대소문자 상관없음
            - test 속성에 EL을 통해 조건식을 쓸 때 공백이 삽입되면 무조건 false를 반환함
    4) choose
        - 다중 조건
        - <c:choose>
            <c:when test="조건1">조건1을 만족하는 경우</c:when>
            <c:when test="조건2">조건2을 만족하는 경우</c:when>
            <c:otherwise>아무 조건을 만족하지 않는 경우</c:otherwise>
          </c:choose>
    5) forEach
        - 반복
        - for문, 향상된 for문
        - <c:forEach var="변수명" begin="시작값" end="마지막값" step="증가값" />
        - <c:forEach var = "변수명" items="컬렉션 혹은 배열"/>
            - varStatus : 루프의 현재 상태를 알려주는 변수의 이름을 지정함
                - current : var에 지정한 현재 루프의 변수값 반환
                - index : var에 지정한 현재 루프의 변수값 반환 (인덱스를 표시)
                - count : 실제 반복 횟수
                - first : 루프의 처음일때 true 반환
                - last : 루프의 마지막일때 true 반환
    6) forTokens
        - 구분자를 기준으로 문자열을 나눠 토큰의 개수만큼 반복해줌
        - <c:forToken items="문자열" delims="문자열 구분자" var="변수명" />
    7) import
    8) redirect
        - sendRedirect() 동일함
        - 페이지 이동 처리
        - <c:redirect url="이동할 경로 및 URL" />
    9) url
        - 지정한 경로와 매개변수를 이용해서 컨텍스트 루트를 포함한 URL을 생성함
        - <form>태그 action 속성에 사용
        - <c:url value="설정한 경로" scope="영역" />
        - var 속성을 이용하면 미리 선언해둔 URL을 원하는 위치에 출력가능
            - ${변수명 }
    10) out
        - <c:out value = "출력할 변수" default = "기본값" escapeXml="특수문자 처리 유무" />
        - escapeXml 속성 : 특수문자를 반환할지 여부 결정함
                            기본값은 true임, 특수 기호를 그대로 출력함
    11) catch
        - 발생한 예외를 잡아 처리하는 역할임
        - 예외가 발생하면 지정한 변수에 대해 에러 메세지가 저장되어 전달됨
        - <c:catch var="변수명">
            실행 코드
            <c:catch/>

4. Formatting 태그 (국제화 태그)
    1) 국가별로 다양한 언어, 날짜, 숫자 형식을 설정할 때 사용
    2) 종류
        - 숫자 포맷
            - formmatNumber : 숫자 포맷 설정
            - parseNumber : 문자열을 숫자 포맷으로 변환함
        - 날짜 포맷
            - formatDate : 날짜나 시간의 포맷 설정
            - parseDate : 문자열을 날짜 포맷으로 변환함
        - 타임존 설정
            - setTimeZone : 시간대 설정 정보를 변수에 저장
            - timeZone : 시간대 설정
        - 로케일 설정
            - setLocale : 통화기호나 시간대를 설정 지역에 맞게 표시함
            - requestEncoding : 요청 매개변수의 문자셋 설정함